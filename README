Warning: you need the Metaspex product to compile this application. Please contact us at info@metaspex.com to get access to the Metaspex product.

This sample Metaspex application leverages the directory and contains all the bundled identity management
services offered by the Foundation Ontology. As such it is not just a sample, but a complete identity
management solution and more. See the reference guide for all the services bundled.

To compile:

make

It will compile the application for use alongside Apache and Nginx, both in debug and optimized
versions.

The hx2a.conf file is by default set to use Couchbase in index (GSI) mode to store the directory.
Couchbase must be installed before running this sample, if you choose to run it on this database.

The configuration file contains dummy credentials, they need to be updated to match the credentials you chose when installing Couchbase.
Please consult this reference documentation page to do so (copy/paste the URI in your browser):

/usr/local/metaspex/doc/reference/hx2a.conf.html

In particular, have a look at the 'directory' keyword.

You can also change the database to MongoDB or CouchDB.

The creation of the directory and the associated indexes is made in the configure.sh script supplied.
Consult the code of the script and update the credentials and possibly other configuration parameters.
Then run it:

./configure.sh

Couchbase takes a long time to create all the indexes, be patient.

Go down (cd) into the Web server of your choice (apache or nginx) and the variant (debug or opt).

To load (or reload) the module in the Web server:

make server

To test that the module was properly installed (use port 8080 for the default Apache configuration and 8081 for Nginx):

curl http://localhost:8081/_

It should display the "Ave" message, which is something like:

{"hx2a":"Ave","Nginx version":"1.20.2","hx2a version":"2.0.3","hx2a build date":"Mar 14 2022 09:01:41"}

Then you can test a login service, using the root user created in the directory. Adjust the password to the password you chose.
Using curl in verbose mode:

$ curl -v http://localhost:8081/_login -d '{"uid": "root", "pwd": "Cla$$1fy"}'
*   Trying 127.0.0.1:8081...
* Connected to localhost (127.0.0.1) port 8081 (#0)
> POST /_login HTTP/1.1
> Host: localhost:8081
> User-Agent: curl/7.78.0
> Accept: */*
> Content-Length: 34
> Content-Type: application/x-www-form-urlencoded
> 
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< Server: nginx/1.24.0
< Date: Tue, 27 Jun 2023 20:48:02 GMT
< Content-Type: text/plain;charset=utf-8
< Content-Length: 2
< Connection: keep-alive
< Set-Cookie: S=O/JFxCg3S26KcVQ7i6QFhqvOBi6o0ahUKoIE9k3LwaHL08BLihLZ6CJk9Zl4SoHVXRaBAYUfgvK+Y5RK4jQ2j6Gn0zShGOEk7Pjy1wx6tQGGZsJNS9pOvw;Version=1;Path=/;HttpOnly;Domain=metaspex.com
< Set-Cookie: U=eyJjIjoiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEiLCJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyIiwidWlkIjoicm9vdCIsImZuIjoiIiwibG4iOiJyb290In0;Version=1;Path=/;Domain=metaspex.com
< Set-Cookie: O=;Domain=metaspex.com;Path=/;Max-Age=0
< 
* Connection #0 to host localhost left intact
{}

We can see that the login was successful, the empty JSON object returned (at the bottom) reports that.
We can also see the cookies set by the identity application. In particular the session cookie ("S") is set to a an encrypted value that the server will use
in subsequent requests.

